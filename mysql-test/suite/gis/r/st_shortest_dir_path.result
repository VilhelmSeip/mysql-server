# ---------------------
# |[0] creating tables|
# ---------------------
CREATE TABLE edges (
id INT PRIMARY KEY,
from_id INT,
to_id INT,
cost DOUBLE,
type ENUM("undefined", "car", "bike", "pedestrian", "spatial")
);
# --------------------------------------------
# |[1] testing Dijkstra i.e. without geometry|
# --------------------------------------------
INSERT INTO edges VALUES
(50, 0, 1, 3.0, "undefined"),
(51, 0, 2, 5.0, "undefined"),
(52, 0, 3, 8.0, "undefined"),
(53, 1, 4, 1.0, "undefined"),
(54, 4, 3, 2.0, "undefined"),
(55, 3, 5, 6.0, "undefined"),
(56, 2, 5, 12.0, "undefined"),
(57, 4, 5, 10.0, "undefined")
;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 5) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 5)
{"cost": 12.0, "path": [{"id": 50, "cost": 3.0}, {"id": 53, "cost": 1.0}, {"id": 54, "cost": 2.0}, {"id": 55, "cost": 6.0}]}
INSERT INTO edges VALUES
(10, 0, 1, 2.0, "car"),
(11, 1, 2, 3.0, "car"),
(12, 0, 2, 8.0, "car"),
(20, 0, 1, 20.0, "bike"),
(21, 1, 2, 25.0, "bike"),
(22, 0, 2, 40.0, "bike"),
(30, 0, 1, 80.0, "pedestrian"),
(31, 1, 2, 100.0, "pedestrian"),
(32, 0, 2, 200.0, "pedestrian"),
(33, 1, 3, 40.0, "pedestrian"),
(34, 3, 2, 20.0, "pedestrian")
;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 2) FROM edges GROUP BY type;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 2)
{"cost": 5.0, "path": [{"id": 51, "cost": 5.0}]}
{"cost": 5.0, "path": [{"id": 10, "cost": 2.0}, {"id": 11, "cost": 3.0}]}
{"cost": 40.0, "path": [{"id": 22, "cost": 40.0}]}
{"cost": 140.0, "path": [{"id": 30, "cost": 80.0}, {"id": 33, "cost": 40.0}, {"id": 34, "cost": 20.0}]}
# -----------------------------------
# |[2] testing A* i.e. with geometry|
# -----------------------------------
DELETE FROM edges;
CREATE TABLE points (
id INT PRIMARY KEY,
point POINT NOT NULL SRID 0
);
ALTER TABLE edges
ADD CONSTRAINT point_ref FOREIGN KEY (to_id) REFERENCES points(id);
INSERT INTO points VALUES
(  0, POINT(  0,  0 ) ),
(  1, POINT(  2,  1 ) ),
(  2, POINT( -1, -1 ) ),
(  3, POINT(  2, -2 ) ),
(  4, POINT(  1,  3 ) ),
(  5, POINT(  4,  3 ) ),
(  6, POINT(  4,  1 ) ),
(  7, POINT(  3, -1 ) ),
(  8, POINT(  6,  2 ) ),
(  9, POINT( -2,  1 ) ),
( 10, POINT( -3, -2 ) ),
( 11, POINT( -1,  3 ) )
;
INSERT INTO edges VALUES
(  0,  0,  2,  1.5 , "spatial" ),
(  1,  0,  3,  2.9 , "spatial" ),
(  2,  0,  5,  5.0 , "spatial" ),
(  3,  3,  1,  3.0 , "spatial" ),
(  4,  2, 11,  2.0 , "spatial" ),
(  5,  2, 10,  2.4 , "spatial" ),
(  6,  2,  9,  2.4 , "spatial" ),
(  7,  9,  4,  3.65, "spatial" ),
(  8,  4,  5,  4.0 , "spatial" ),
(  9,  5,  8,  2.4 , "spatial" ),
( 10,  5,  6,  2.0 , "spatial" ),
( 11,  0,  7,  3.2 , "spatial" ),
( 12,  7,  6,  2.3 , "spatial" ),
( 13,  8,  6,  2.3 , "spatial" ),
( 14,  1,  6,  2.0 , "spatial" )
;
SELECT ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 6)
FROM edges
JOIN points ON points.id = edges.to_id
;
ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 6)
{"cost": 5.5, "path": [{"id": 11, "cost": 3.2}, {"id": 12, "cost": 2.3}]}
UPDATE edges SET cost = 1000.0 where id = 12;
SELECT ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 6)
FROM edges
JOIN points ON points.id = edges.to_id
;
ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 6)
{"cost": 7.0, "path": [{"id": 2, "cost": 5.0}, {"id": 10, "cost": 2.0}]}
UPDATE edges SET cost = 1000.0 where id = 10;
SELECT ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 6)
FROM edges
JOIN points ON points.id = edges.to_id
;
ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 6)
{"cost": 7.9, "path": [{"id": 1, "cost": 2.9}, {"id": 3, "cost": 3.0}, {"id": 14, "cost": 2.0}]}
# -------------
# |[3] cleanup|
# -------------
DROP TABLE edges;
DROP TABLE points;
