# ---------------------
# |[0] creating tables|
# ---------------------
CREATE TABLE edges (
id INT PRIMARY KEY,
from_id INT,
to_id INT,
cost DOUBLE,
type ENUM("undefined", "car", "bike", "pedestrian", "spatial")
);
# --------------------------------------------
# |[1] testing Dijkstra i.e. without geometry|
# --------------------------------------------
INSERT INTO edges VALUES
(50, 0, 1, 3.0, "undefined"),
(51, 0, 2, 5.0, "undefined"),
(52, 0, 3, 8.0, "undefined"),
(53, 1, 4, 1.0, "undefined"),
(54, 4, 3, 2.0, "undefined"),
(55, 3, 5, 6.0, "undefined"),
(56, 2, 5, 12.0, "undefined"),
(57, 4, 5, 10.0, "undefined"),
(58, 5, 7, 3.0, "undefined"),
(59, 6, 10, 17.0, "undefined"),
(60, 4, 8, 15.0, "undefined"),
(61, 2, 6, 16.0, "undefined"),
(62, 4, 7, 9.0, "undefined"),
(63, 5, 8, 13.0, "undefined"),
(64, 8, 9, 4.0, "undefined"),
(65, 8, 10, 12.0, "undefined"),
(66, 10, 12, 8.0, "undefined"),
(67, 9, 11, 5.0, "undefined"),
(68, 8, 11, 8.0, "undefined"),
(69, 4, 12, 25.0, "undefined"),
(70, 12, 13, 3.0, "undefined"),
(71, 12, 15, 9.0, "undefined"),
(72, 13, 17, 11.0, "undefined"),
(73, 14, 15, 2.0, "undefined"),
(74, 12, 14, 6.0, "undefined"),
(75, 15, 18, 10.0, "undefined"),
(76, 18, 20, 7.0, "undefined"),
(77, 16, 21, 13.0, "undefined"),
(78, 17, 19, 8.0, "undefined"),
(79, 15, 19, 14.0, "undefined"),
(80, 21, 23, 4.0, "undefined"),
(81, 21, 22, 3.0, "undefined"),
(82, 21, 25, 9.0, "undefined"),
(83, 23, 26, 8.0, "undefined"),
(84, 22, 24, 5.0, "undefined"),
(85, 20, 24, 10.0, "undefined"),
(86, 15, 16, 2.0, "undefined"),
(87, 24, 25, 3.0, "undefined")
;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 5) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 5)
{"cost": 12.0, "path": [{"id": 50, "cost": 3.0}, {"id": 53, "cost": 1.0}, {"id": 54, "cost": 2.0}, {"id": 55, "cost": 6.0}], "visited_nodes": 7}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 4, 12) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 4, 12)
{"cost": 25.0, "path": [{"id": 69, "cost": 25.0}], "visited_nodes": 4}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 3, 8) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 3, 8)
{"cost": 19.0, "path": [{"id": 55, "cost": 6.0}, {"id": 63, "cost": 13.0}], "visited_nodes": 3}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 4, 10) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 4, 10)
{"cost": 27.0, "path": [{"id": 60, "cost": 15.0}, {"id": 65, "cost": 12.0}], "visited_nodes": 8}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 22) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 22)
{"cost": 55.0, "path": [{"id": 50, "cost": 3.0}, {"id": 53, "cost": 1.0}, {"id": 69, "cost": 25.0}, {"id": 74, "cost": 6.0}, {"id": 73, "cost": 2.0}, {"id": 86, "cost": 2.0}, {"id": 77, "cost": 13.0}, {"id": 81, "cost": 3.0}], "visited_nodes": 27}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 4, 26) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 4, 26)
{"cost": 60.0, "path": [{"id": 69, "cost": 25.0}, {"id": 74, "cost": 6.0}, {"id": 73, "cost": 2.0}, {"id": 86, "cost": 2.0}, {"id": 77, "cost": 13.0}, {"id": 80, "cost": 4.0}, {"id": 83, "cost": 8.0}], "visited_nodes": 27}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 3, 19) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 3, 19)
{"cost": 61.0, "path": [{"id": 55, "cost": 6.0}, {"id": 63, "cost": 13.0}, {"id": 65, "cost": 12.0}, {"id": 66, "cost": 8.0}, {"id": 74, "cost": 6.0}, {"id": 73, "cost": 2.0}, {"id": 79, "cost": 14.0}], "visited_nodes": 16}
INSERT INTO edges VALUES
(10, 0, 1, 2.0, "car"),
(11, 1, 2, 3.0, "car"),
(12, 0, 2, 8.0, "car"),
(20, 0, 1, 20.0, "bike"),
(21, 1, 2, 25.0, "bike"),
(22, 0, 2, 40.0, "bike"),
(30, 0, 1, 80.0, "pedestrian"),
(31, 1, 2, 100.0, "pedestrian"),
(32, 0, 2, 200.0, "pedestrian"),
(33, 1, 3, 40.0, "pedestrian"),
(34, 3, 2, 20.0, "pedestrian")
;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 2) FROM edges GROUP BY type;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 2)
{"cost": 5.0, "path": [{"id": 51, "cost": 5.0}], "visited_nodes": 3}
{"cost": 5.0, "path": [{"id": 10, "cost": 2.0}, {"id": 11, "cost": 3.0}], "visited_nodes": 2}
{"cost": 40.0, "path": [{"id": 22, "cost": 40.0}], "visited_nodes": 2}
{"cost": 140.0, "path": [{"id": 30, "cost": 80.0}, {"id": 33, "cost": 40.0}, {"id": 34, "cost": 20.0}], "visited_nodes": 3}
# -----------------------------------
# |[2] testing A* i.e. with geometry|
# -----------------------------------
DELETE FROM edges;
CREATE TABLE points (
id INT PRIMARY KEY,
point POINT NOT NULL SRID 0
);
ALTER TABLE edges
ADD CONSTRAINT point_ref FOREIGN KEY (to_id) REFERENCES points(id);
INSERT INTO points VALUES
(  0, POINT(  0,  0 ) ),
(  1, POINT(  2,  1 ) ),
(  2, POINT( -1, -1 ) ),
(  3, POINT(  2, -2 ) ),
(  4, POINT(  1,  3 ) ),
(  5, POINT(  4,  3 ) ),
(  6, POINT(  4,  1 ) ),
(  7, POINT(  3, -1 ) ),
(  8, POINT(  6,  2 ) ),
(  9, POINT( -2,  1 ) ),
( 10, POINT( -3, -2 ) ),
( 11, POINT( -1,  3 ) ),
( 12, POINT( -1,  5 ) ),
( 13, POINT( -2,  3 ) ),
( 14, POINT(  3,  3 ) ),
( 15, POINT(  2,  4 ) ),
( 16, POINT(  4,  6 ) ),
( 17, POINT(  4,  7 ) ),
( 18, POINT(  6,  3 ) ),
( 19, POINT(  5,  9 ) ),
( 20, POINT(  7,  10 ) ),
( 21, POINT(  9,  11 ) ),
( 22, POINT(  10,  4 ) ),
( 23, POINT(  13,  15 ) ),
( 24, POINT(  12,  14 ) ),
( 25, POINT(  14,  16 ) ),
( 26, POINT(  15,  19 ) ),
( 27, POINT(  17,  22 ) ),
( 28, POINT(  19,  24 ) ),
( 29, POINT(  21,  25 ) ),
( 30, POINT(  26,  30 ) ),
( 31, POINT(  29,  32 ) ),
( 32, POINT(  31,  36 ) ),
( 33, POINT(  35,  39 ) ),
( 34, POINT(  37,  42 ) ),
( 35, POINT(  38,  40 ) ),
( 36, POINT(  25,  32 ) ),
( 37, POINT(  40,  42 ) )
;
INSERT INTO edges VALUES
(0, 0, 1, 3.0, "spatial"),
(1, 0, 2, 5.0, "spatial"),
(2, 0, 3, 8.0, "spatial"),
(3, 1, 4, 1.0, "spatial"),
(4, 4, 3, 2.0, "spatial"),
(5, 3, 5, 6.0, "spatial"),
(6, 2, 5, 12.0, "spatial"),
(7, 4, 5, 10.0, "spatial"),
(8, 5, 7, 3.0, "spatial"),
(9, 6, 10, 17.0, "spatial"),
(10, 4, 8, 15.0, "spatial"),
(11, 2, 6, 16.0, "spatial"),
(12, 4, 7, 9.0, "spatial"),
(13, 5, 8, 13.0, "spatial"),
(14, 8, 9, 4.0, "spatial"),
(15, 8, 10, 12.0, "spatial"),
(16, 10, 12, 8.0, "spatial"),
(17, 9, 11, 5.0, "spatial"),
(18, 8, 11, 8.0, "spatial"),
(19, 4, 12, 25.0, "spatial"),
(20, 12, 13, 3.0, "spatial"),
(21, 12, 15, 9.0, "spatial"),
(22, 13, 17, 11.0, "spatial"),
(23, 14, 15, 2.0, "spatial"),
(24, 12, 14, 6.0, "spatial"),
(25, 15, 18, 10.0, "spatial"),
(26, 18, 20, 7.0, "spatial"),
(27, 16, 21, 13.0, "spatial"),
(28, 17, 19, 8.0, "spatial"),
(29, 15, 19, 14.0, "spatial"),
(30, 21, 23, 4.0, "spatial"),
(31, 21, 22, 3.0, "spatial"),
(32, 21, 25, 9.0, "spatial"),
(33, 23, 26, 8.0, "spatial"),
(34, 22, 24, 5.0, "spatial"),
(35, 20, 24, 10.0, "spatial"),
(36, 15, 16, 2.0, "spatial"),
(37, 24, 25, 3.0, "spatial")
;
SELECT ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 26)
FROM edges
JOIN points ON points.id = edges.to_id
;
ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 26)
{"cost": 64.0, "path": [{"id": 0, "cost": 3.0}, {"id": 3, "cost": 1.0}, {"id": 19, "cost": 25.0}, {"id": 24, "cost": 6.0}, {"id": 23, "cost": 2.0}, {"id": 36, "cost": 2.0}, {"id": 27, "cost": 13.0}, {"id": 30, "cost": 4.0}, {"id": 33, "cost": 8.0}], "visited_nodes": 25}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 26) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 26)
{"cost": 64.0, "path": [{"id": 0, "cost": 3.0}, {"id": 3, "cost": 1.0}, {"id": 19, "cost": 25.0}, {"id": 24, "cost": 6.0}, {"id": 23, "cost": 2.0}, {"id": 36, "cost": 2.0}, {"id": 27, "cost": 13.0}, {"id": 30, "cost": 4.0}, {"id": 33, "cost": 8.0}], "visited_nodes": 30}
UPDATE edges SET cost = 1000.0 where id = 3;
SELECT ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 26)
FROM edges
JOIN points ON points.id = edges.to_id
;
ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 26)
{"cost": 81.0, "path": [{"id": 1, "cost": 5.0}, {"id": 11, "cost": 16.0}, {"id": 9, "cost": 17.0}, {"id": 16, "cost": 8.0}, {"id": 24, "cost": 6.0}, {"id": 23, "cost": 2.0}, {"id": 36, "cost": 2.0}, {"id": 27, "cost": 13.0}, {"id": 30, "cost": 4.0}, {"id": 33, "cost": 8.0}], "visited_nodes": 23}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 26) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 26)
{"cost": 81.0, "path": [{"id": 1, "cost": 5.0}, {"id": 11, "cost": 16.0}, {"id": 9, "cost": 17.0}, {"id": 16, "cost": 8.0}, {"id": 24, "cost": 6.0}, {"id": 23, "cost": 2.0}, {"id": 36, "cost": 2.0}, {"id": 27, "cost": 13.0}, {"id": 30, "cost": 4.0}, {"id": 33, "cost": 8.0}], "visited_nodes": 31}
UPDATE edges SET cost = 1000.0 where id = 11;
SELECT ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 26)
FROM edges
JOIN points ON points.id = edges.to_id
;
ST_SHORTEST_DIR_PATH(edges.id, edges.from_id, edges.to_id, edges.cost, points.point, 0, 26)
{"cost": 82.0, "path": [{"id": 2, "cost": 8.0}, {"id": 5, "cost": 6.0}, {"id": 13, "cost": 13.0}, {"id": 15, "cost": 12.0}, {"id": 16, "cost": 8.0}, {"id": 24, "cost": 6.0}, {"id": 23, "cost": 2.0}, {"id": 36, "cost": 2.0}, {"id": 27, "cost": 13.0}, {"id": 30, "cost": 4.0}, {"id": 33, "cost": 8.0}], "visited_nodes": 25}
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 26) FROM edges;
ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, NULL, 0, 26)
{"cost": 82.0, "path": [{"id": 2, "cost": 8.0}, {"id": 5, "cost": 6.0}, {"id": 13, "cost": 13.0}, {"id": 15, "cost": 12.0}, {"id": 16, "cost": 8.0}, {"id": 24, "cost": 6.0}, {"id": 23, "cost": 2.0}, {"id": 36, "cost": 2.0}, {"id": 27, "cost": 13.0}, {"id": 30, "cost": 4.0}, {"id": 33, "cost": 8.0}], "visited_nodes": 33}
# -----------------------------
# |[3] testing error detection|
# -----------------------------
DELETE FROM edges;
ALTER TABLE edges DROP FOREIGN KEY point_ref;
DROP TABLE points;
ALTER TABLE edges ADD COLUMN to_point POINT SRID 0;
INSERT INTO edges VALUES
(  0,  0,  1,  1.1 , "spatial", POINT( 2, 1 ) ),
(  1,  0,  2,  2.1 , "spatial", POINT( 3, 2 ) ),
(  2,  1,  2,  1.8 , "spatial", POINT( 0, 4 ) )
;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, 1) FROM edges;
ERROR HY000: Parameters of function st_shortest_dir_path contains different geometries to define same node [node/point id = 2]
DELETE FROM edges WHERE id = 2;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 1, 0) FROM edges;
ERROR HY000: No path found on st_shortest_dir_path
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, 0) FROM edges;
ERROR HY000: End node can't be equal to start node on st_shortest_dir_path
DELETE FROM edges WHERE id = 2;
INSERT INTO edges VALUES
(  2,  0,  2,  2.1 , "spatial", NULL )
;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, 1) FROM edges;
ERROR HY000: All point geometries or none of the point geometries must be null on st_shortest_dir_path
DELETE FROM edges;
INSERT INTO edges VALUES
(  0,  0,  1,  1.1 , "spatial", NULL ),
(  1,  0,  2,  2.1 , "spatial", POINT( 3, 2 ) )
;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, 1) FROM edges;
ERROR HY000: All point geometries or none of the point geometries must be null on st_shortest_dir_path
DELETE FROM edges;
INSERT INTO edges VALUES
(  0,  0,  1,  1.1 , "spatial", POINT( 2, 1 ) ),
(  1,  0,  2,  2.1 , "spatial", POINT( 3, 2 ) ),
(  2,  1,  0,  1.8 , "spatial", POINT( 0, 4 ) )
;
SELECT ST_SHORTEST_DIR_PATH(0 , from_id, to_id, cost, to_point, 0, 1) FROM edges;
ERROR HY000: Error on st_shortest_dir_path, edge id 0 used more than once. Ids must be unique
INSERT INTO edges VALUES
( 9, 9, 9, 9.0, "spatial", POINT(9,9) );
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, 1) FROM edges;
ERROR HY000: Error on st_shortest_dir_path, from_node can't equal to_node (loop found in edge 9)
DELETE FROM edges WHERE id = 9;
INSERT INTO edges VALUES
( 9, 8, 9, 0.0, "spatial", POINT(9, 9));
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, 1) FROM edges;
ERROR HY000: Error on st_shortest_dir_path, edge cost must be greater than or equal to 0, found 0.000000 on edge 9
UPDATE edges SET cost = -1.0 WHERE id = 9;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, 1) FROM edges;
ERROR HY000: Error on st_shortest_dir_path, edge cost must be greater than or equal to 0, found -1.000000 on edge 9
DELETE FROM edges WHERE id = 9;
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, 0       , 0, 1) FROM edges;
ERROR 22023: Invalid GIS data provided to function st_shortest_dir_path.
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, id, 1) FROM edges;
ERROR HY000: Incorrect arguments to st_shortest_dir_path
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, id) FROM edges;
ERROR HY000: Incorrect arguments to st_shortest_dir_path
SELECT ST_SHORTEST_DIR_PATH(NULL, from_id, to_id, cost, to_point, 0, id) FROM edges;
ERROR HY000: Incorrect arguments to st_shortest_dir_path
SELECT ST_SHORTEST_DIR_PATH(id, NULL    , to_id, cost, to_point, 0, id) FROM edges;
ERROR HY000: Incorrect arguments to st_shortest_dir_path
SELECT ST_SHORTEST_DIR_PATH(id, from_id, NULL  , cost, to_point, 0, id) FROM edges;
ERROR HY000: Incorrect arguments to st_shortest_dir_path
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, NULL , to_point, 0, id) FROM edges;
ERROR HY000: Incorrect arguments to st_shortest_dir_path
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, NULL, id) FROM edges;
ERROR HY000: Incorrect arguments to st_shortest_dir_path
SELECT ST_SHORTEST_DIR_PATH(id, from_id, to_id, cost, to_point, 0, NULL) FROM edges;
ERROR HY000: Incorrect arguments to st_shortest_dir_path
# -------------
# |[4] cleanup|
# -------------
DROP TABLE edges;
